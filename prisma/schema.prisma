generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id         Int          @id @default(autoincrement())
  uuid       String       @unique @default(uuid())
  firstName  String       @map("first_name")
  lastName   String       @map("last_name")
  age        Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User?
  passengers Passengers[]

  @@map("person")
}

model User {
  id             Int            @id @default(autoincrement())
  uuid           String         @unique @default(uuid())
  personId       Int            @unique @map("person_id")
  email          String         @unique
  password       String
  photo          String
  phoneNumber    String         @map("phone_number")
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  applications   Application[]
  travelAgencies TravelAgency[]
  person         Person         @relation(fields: [personId], references: [id])

  @@map("user")
}

model TravelAgency {
  id                Int                @id @default(autoincrement())
  uuid              String             @unique @default(uuid())
  slug              String             @unique
  ownerId           Int                @map("owner_id")
  name              String
  website           String
  logo              String
  notionDB          String?            @map("notion_db")
  notionTokenDB     String?            @map("notion_token_db")
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  applications      Application[]
  owner             User               @relation(fields: [ownerId], references: [id])

  @@map("travel_agency")
}

model Application {
  id                     Int                     @id @default(autoincrement())
  uuid                   String                  @unique @default(uuid())
  userId                 Int?                    @map("user_id")
  travelAgencyId         Int                     @map("travel_agency_id")
  destinationId          Int                     @map("destination_id")
  leadSource             LeadSource              @map("lead_source")
  userCurrentLocation    String                  @map("user_current_location")
  hasEntryPermission     Boolean                 @map("has_entry_permission")
  startDate              DateTime                @map("start_date")
  endDate                DateTime                @map("end_date")
  tripObjective          TripObjective           @map("trip_objective")
  contactPreference      ContactPreference       @map("contact_preference")
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  user                   User?                   @relation(fields: [userId], references: [id])
  travelAgency           TravelAgency            @relation(fields: [travelAgencyId], references: [id])
  destination            Destination             @relation(fields: [destinationId], references: [id])
  passengers             Passengers[]
  applicationAttractions ApplicationAttraction[]

  @@map("application")
}

model Destination {
  id                Int                @id @default(autoincrement())
  uuid              String             @unique @default(uuid())
  name              String
  description       String
  images            String[]
  video             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  attractions       Attraction[]
  applications      Application[]

  @@map("destination")
}

model Attraction {
  id                     Int                     @id @default(autoincrement())
  uuid                   String                  @unique @default(uuid())
  destinationId          Int                     @map("destination_id")
  name                   String
  description            String
  images                 String[]
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  destination            Destination             @relation(fields: [destinationId], references: [id])
  applicationAttractions ApplicationAttraction[]
  hotels                 Hotel[]

  @@map("attraction")
}

model Hotel {
  id                     Int                      @id @default(autoincrement())
  uuid                   String                   @unique @default(uuid())
  attractionId           Int                      @map("attraction_id")
  name                   String
  description            String
  images                 String[]
  roomTypes              String[]                 @default([]) @map("room_types")
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  attraction             Attraction               @relation(fields: [attractionId], references: [id])
  applicationAttractions ApplicationAttraction[]

  @@map("hotel")
}

model Passengers {
  personId      Int         @map("person_id")
  applicationId Int         @map("application_id")
  roomAssigned  Int         @map("room_assigned")
  person        Person      @relation(fields: [personId], references: [id])
  application   Application @relation(fields: [applicationId], references: [id])

  @@unique([personId, applicationId])
  @@map("passengers")
}

model ApplicationAttraction {
  id                Int         @id @default(autoincrement())
  uuid              String      @unique @default(uuid())
  applicationId     Int         @map("application_id")
  attractionId      Int         @map("attraction_id")
  hotelId           Int?        @map("hotel_id")
  selectedRoomType  String?     @map("selected_room_type")
  startDate         DateTime    @map("start_date")
  endDate           DateTime    @map("end_date")
  application       Application @relation(fields: [applicationId], references: [id])
  attraction        Attraction  @relation(fields: [attractionId], references: [id])
  hotel             Hotel?      @relation(fields: [hotelId], references: [id])

  @@map("application_attraction")
}

enum LeadSource {
  INSTAGRAM
  FACEBOOK
  REFERRAL
  WEBSITE
  OTHER
}

enum TripObjective {
  VACATION
  FAMILY
  COUPLE
  SOLO
  FRIENDS
  ADVENTURE
  RELAXATION
  CULTURAL_EXPLORATION
  FOOD_AND_CULINARY
  BEACH_AND_SUN
  WILDLIFE_AND_NATURE
  SPORTS_AND_RECREATION
  HONEYMOON
  OTHER
}

enum ContactPreference {
  CALL
  VIDEO_CALL
  EMAIL
  SMS
  WHATSAPP
  OTHER
}
